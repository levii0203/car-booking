services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"   # for containers
      - "29092:29092" # for host machine
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 5s
        retries: 5

  location-service:
    build:
      context: ./location-service
      dockerfile: Dockerfile
    container_name: location-service
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    volumes:
      - ./location-service:/app/location-service
      - /app/location-service/node_modules

  ride-service:
    build:
      context: ./ride-service
      dockerfile: Dockerfile
    container_name: ride-service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
    ports:
      - "8080:8080"
    volumes:
      - ./ride-service:/app/ride-service
      - /app/ride-service/node_modules

volumes:
  kafka_data:
    driver: local

